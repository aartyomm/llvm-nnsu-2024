# RUN: llc -mtriple x86_64-unknown-linux-gnu --load=%llvmshlibdir/X86KostinPass%shlibext -run-pass=x86-kostin-pass  %s -o - | FileCheck %s

# test.cpp

# __m128d muladd_test1(__m128d a, __m128d b, __m128d c) { return a * b + c; }

--- |
  ; ModuleID = 'source.ll'
  source_filename = "source.cpp"
  target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-pc-windows-msvc19.29.30148"
  
  ; Function Attrs: mustprogress noinline nounwind optnone uwtable
  define dso_local noundef <2 x double> @"?muladd_test1@@YA?AU__m128d@@U1@00@Z"(<2 x double> noundef %a, <2 x double> noundef %b, <2 x double> noundef %c) #0 {
  entry:
    %c.addr = alloca <2 x double>, align 16
    %b.addr = alloca <2 x double>, align 16
    %a.addr = alloca <2 x double>, align 16
    store <2 x double> %c, ptr %c.addr, align 16
    store <2 x double> %b, ptr %b.addr, align 16
    store <2 x double> %a, ptr %a.addr, align 16
    %0 = load <2 x double>, ptr %a.addr, align 16
    %1 = load <2 x double>, ptr %b.addr, align 16
    %2 = load <2 x double>, ptr %c.addr, align 16
    %3 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %0, <2 x double> %1, <2 x double> %2)
    ret <2 x double> %3
  }
  
  ; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
  declare <2 x double> @llvm.fmuladd.v2f64(<2 x double>, <2 x double>, <2 x double>) #1
  
  attributes #0 = { mustprogress noinline nounwind optnone uwtable "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
  
  !llvm.module.flags = !{!0, !1, !2, !3}
  !llvm.ident = !{!4}
  
  !0 = !{i32 1, !"wchar_size", i32 2}
  !1 = !{i32 8, !"PIC Level", i32 2}
  !2 = !{i32 7, !"uwtable", i32 2}
  !3 = !{i32 1, !"MaxTLSAlign", i32 65536}
  !4 = !{!"clang version 17.0.6 (https://github.com/aartyomm/llvm-nnsu-2024.git 02bf4e00b9b0d1e2a3aaae02489a111d5992ac00)"}

...
---
name:            '?muladd_test1@@YA?AU__m128d@@U1@00@Z'
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gr64, preferred-register: '' }
  - { id: 1, class: gr64, preferred-register: '' }
  - { id: 2, class: gr64, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
  - { id: 5, class: vr128, preferred-register: '' }
  - { id: 6, class: vr128, preferred-register: '' }
  - { id: 7, class: vr128, preferred-register: '' }
  - { id: 8, class: vr128, preferred-register: '' }
  - { id: 9, class: vr128, preferred-register: '' }
  - { id: 10, class: vr128, preferred-register: '' }
  - { id: 11, class: vr128, preferred-register: '' }
  - { id: 12, class: vr128, preferred-register: '' }
  - { id: 13, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$rcx', virtual-reg: '%0' }
  - { reg: '$rdx', virtual-reg: '%1' }
  - { reg: '$r8', virtual-reg: '%2' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    16
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:
  - { id: 0, name: c.addr, type: default, offset: 0, size: 16, alignment: 16, 
      stack-id: default, callee-saved-register: '', callee-saved-restored: true, 
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
  - { id: 1, name: b.addr, type: default, offset: 0, size: 16, alignment: 16, 
      stack-id: default, callee-saved-register: '', callee-saved-restored: true, 
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
  - { id: 2, name: a.addr, type: default, offset: 0, size: 16, alignment: 16, 
      stack-id: default, callee-saved-register: '', callee-saved-restored: true, 
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $rcx, $rdx, $r8
  
    %2:gr64 = COPY $r8
    %1:gr64 = COPY $rdx
    %0:gr64 = COPY $rcx
    %5:vr128 = MOVAPDrm %2, 1, $noreg, 0, $noreg :: (load (s128))
    %4:vr128 = MOVAPDrm %1, 1, $noreg, 0, $noreg :: (load (s128))
    %3:vr128 = MOVAPDrm %0, 1, $noreg, 0, $noreg :: (load (s128))
    MOVAPDmr %stack.0.c.addr, 1, $noreg, 0, $noreg, %5 :: (store (s128) into %ir.c.addr)
    MOVAPDmr %stack.1.b.addr, 1, $noreg, 0, $noreg, %4 :: (store (s128) into %ir.b.addr)
    MOVAPDmr %stack.2.a.addr, 1, $noreg, 0, $noreg, %3 :: (store (s128) into %ir.a.addr)
    %13:vr128 = MOVAPDrm %stack.2.a.addr, 1, $noreg, 0, $noreg :: (load (s128) from %ir.a.addr)
    %12:vr128 = MOVAPDrm %stack.1.b.addr, 1, $noreg, 0, $noreg :: (load (s128) from %ir.b.addr)
    ; CHECK: %6:vr128 = VFMADD213PDr %13, %12, %11, implicit $mxcsr
    ; CHECK-NEXT: $xmm0 = COPY %6
    %11:vr128 = MOVAPDrm %stack.0.c.addr, 1, $noreg, 0, $noreg :: (load (s128) from %ir.c.addr)
    %10:vr128 = nofpexcept MULPDrr %13, %12, implicit $mxcsr
    %6:vr128 = nofpexcept ADDPDrr %10, %11, implicit $mxcsr
    $xmm0 = COPY %6
    RET64 implicit $xmm0

...
